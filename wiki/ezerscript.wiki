= Framework Ezer =

== EzerScript II ==

=== Proměnné ===

Proměnné jsou dvou druhů skalární: number a text a objektové.
Objektové jsou typy object, array a ezer. 

Hodnotou specifického typu '''ezer''' jsou bloky ezersktiptu, například panely, elemety pro vstup 
(field, select, check, radio, ...), elementy pro zobrazení tabulek (browse, list) aj.

Referencí proměnné skalárního typu je vždy číslo nebo text, referencí proměnné objektového typu
je vždy objekt, pole nebo element ezerskriptu.

=== Syntaxe ===

Gramatika jazyka ezerscript/func popisuje jazyk rozšiřující podmnožinu javascriptu
* o přístup k blokům ezerscriptu (var, panel, field, label, ...) a k jejich atributům, blok lze předávat referencí s & nebo defaultně hodnotou (získanou metodou get)
* o iteraci složek form a list příkazem for-of a jejich indexování
* o volání funkcí na serveru napsaných v PHP:      php.funkce(arg,...)
* o volání funkcí klienta napsaných v javascriptu: js.funkce(arg,...)
* o možnost specifikovat typ parametru
* o možnost zacházet s atributy bloku předaného parametrem nebo uloženým do lokální proměnné typu 'block'
není implementováno: precedence operátorů, příkazy s návěštím, ...
      
   body     :: func '(' params ')' '{' [ 'var' varlist ] stmnts '}'
  params   :: id [':' type] (',' id [':' type] )* 
  varlist  :: id ':' type ( ',' id ':' type)*
  type     :: 'number' | 'text' | 'object' | 'array' | 'ezer'

  stmnts   :: stmnt ( ';' stmnt )*
            | 'if' '(' expr ')' stmnt [ 'else' stmnt ]
            | 'if' '(' expr ')' stmnt ('elseif' '(' expr ')' stmnt)* [ 'else' stmnt ]
            | 'for' '(' id '=' expr ';' expr ';' stmnt ')' '{' stmnts '}'
            | 'for' '(' id 'of' expr ')' '{' stmnts '}'
            | 'while' '(' expr ')' '{' stmnts '}'
            | 'break' | 'continue'
            | 'switch (' expr ') {' ('case' value ':' stmnts)* ['default' ':' stmnts] '}'
            | call
            |



